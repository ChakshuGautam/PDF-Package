version: "3"

services:

  web:
    image: samagragovernance/doc-generator:latest
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./src/:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata

  graphql-engine:
    image: ${HASURA_VERSION}
    ports:
      - "5001:8080"
    depends_on:
      - db
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${SQL_USER}:${SQL_PASSWORD}@db:5432/${SQL_DATABASE}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_PASS}

  templaterdb:
    container_name: templaterdb
    image: postgres:12
    ports:
      - '${POSTGRES_HOST}:5432'
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./pgdata1:/var/lib/postgresql/data

  gql:
    image: ${HASURA_VERSION}
    ports:
      - '10022:8080'
    depends_on:
      - templaterdb
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@templaterdb:5432/${DB_NAME}
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true' # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_PASS}

  templater:
    image: samagragovernance/templater:latest
    ports:
      - '3007:3000'
    depends_on:
      - templaterdb
    restart: always
    environment:
      DATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@templaterdb:5432/${DB_NAME}
      
  broker:
   container_name: broker
   image: "docker.io/bitnami/rabbitmq:latest"
   env_file:
     - ./.env
   ports:
     - "4369:4369"
     - "5672:5672"
     - "25672:25672"
     - "15672:15672"
   volumes:
     - "doc_rabbitmq:/bitnami"

  worker:
    image: samagragovernance/doc-generator:latest
    restart: always
    env_file:
      - .env
    volumes:
      - ./logs:/srv/logs/
    command: celery --app=pdf.celery.app worker --loglevel=info --concurrency=10 -n worker@%h
  
  minio:
    image: quay.io/minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    volumes:
      - ./minio:/data
    command: server /data --console-address ":9001"

volumes:
  doc_rabbitmq:
    driver: local
